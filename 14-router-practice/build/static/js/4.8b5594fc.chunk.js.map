{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onSubmit","useEffect","submitFormHandler","event","preventDefault","quoteId","commentData","current","value","form","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","onAddCommentHandler","useCallback","LoadingSpinner","length","onClick","HighlightedQuote","quote","author","QuoteDetail","getSingleQuote","loadedQuote","match","useRouteMatch","path","exact","to","url"],"mappings":"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","file":"static/js/4.8b5594fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2scrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2dz26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__39z1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3b7TU\",\"loading\":\"NewCommentForm_loading__3Yntr\",\"control\":\"NewCommentForm_control__2dm3D\",\"actions\":\"NewCommentForm_actions__3BWHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__31Eld\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from \"react\";\nimport LoadingSpiner from \"../../components/UI/LoadingSpinner\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { addComment } from \"../../lib/lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onSubmit } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onSubmit();\n    }\n  }, [status, error, onSubmit]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate\n\n    const { quoteId } = props;\n    const commentData = commentTextRef.current.value;\n\n    sendRequest({ commentData, quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpiner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/hooks/use-http\";\nimport { getAllComments } from \"../../lib/lib/api\";\nimport CommentsList from \"../comments/CommentsList\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = useParams();\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments here yet.</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={quoteId} onSubmit={onAddCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/lib/api\";\r\n\r\nexport default function QuoteDetail() {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  const { quoteId } = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Show Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comments`} exact>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}