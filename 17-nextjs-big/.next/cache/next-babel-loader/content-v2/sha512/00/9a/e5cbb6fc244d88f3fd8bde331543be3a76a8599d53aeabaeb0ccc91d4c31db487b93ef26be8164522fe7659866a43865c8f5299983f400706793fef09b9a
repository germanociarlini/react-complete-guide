{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"N:\\\\Dev\\\\01-starting-setup\\\\01-starting-setup\\\\17-nextjs-big\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = ({\n  meetupData\n}) => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meetupData.image,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nconst MONGO_CONNECTION = \"mongodb+srv://ciarlini-nextjs-demo:4j8IedfvzvZ1WHkb@ciarlini-cluster-for-ne.3neug.mongodb.net/meetups?retryWrites=true&w=majority\";\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(MONGO_CONNECTION);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const paths = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    fallback: false,\n    paths\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    meetupId\n  } = context.params;\n  const client = await MongoClient.connect(MONGO_CONNECTION);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupData = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["N:/Dev/01-starting-setup/01-starting-setup/17-nextjs-big/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","meetupData","image","title","address","description","MONGO_CONNECTION","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","findOne","props"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACxC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,UAAU,CAACC,KADpB;AAEE,IAAA,KAAK,EAAED,UAAU,CAACE,KAFpB;AAGE,IAAA,OAAO,EAAEF,UAAU,CAACG,OAHtB;AAIE,IAAA,WAAW,EAAEH,UAAU,CAACI;AAJ1B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,MAAMC,gBAAgB,GACpB,mIADF;AAGA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBH,gBAApB,CAArB;AACA,QAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,QAAMC,KAAK,GAAGL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AACrCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAD6B,GAAb,CAAZ,CAAd;AAIA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELN,IAAAA;AAFK,GAAP;AAID,CAjBM;AAmBP,OAAO,MAAMO,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAM;AAAEJ,IAAAA;AAAF,MAAeI,OAAO,CAACL,MAA7B;AAEA,QAAMb,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBH,gBAApB,CAArB;AACA,QAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMX,UAAU,GAAG,MAAMU,iBAAiB,CAACgB,OAAlB,CAA0B;AACjDZ,IAAAA,GAAG,EAAEjB,QAAQ,CAACwB,QAAD;AADoC,GAA1B,CAAzB;AAIA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACL3B,MAAAA;AADK;AADF,GAAP;AAKD,CAhBM;AAkBP,eAAeD,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = ({ meetupData }) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={meetupData.image}\r\n      title={meetupData.title}\r\n      address={meetupData.address}\r\n      description={meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nconst MONGO_CONNECTION =\r\n  \"mongodb+srv://ciarlini-nextjs-demo:4j8IedfvzvZ1WHkb@ciarlini-cluster-for-ne.3neug.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(MONGO_CONNECTION);\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  const paths = meetups.map((meetup) => ({\r\n    params: { meetupId: meetup._id.toString() },\r\n  }));\r\n\r\n  return {\r\n    fallback: false,\r\n    paths,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const { meetupId } = context.params;\r\n\r\n  const client = await MongoClient.connect(MONGO_CONNECTION);\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupData = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      meetupData,\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}