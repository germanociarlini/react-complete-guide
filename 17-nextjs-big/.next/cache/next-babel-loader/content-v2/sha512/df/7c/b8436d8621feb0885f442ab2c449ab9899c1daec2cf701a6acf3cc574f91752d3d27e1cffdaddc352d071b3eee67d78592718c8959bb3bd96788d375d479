{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"N:\\\\Dev\\\\01-starting-setup\\\\01-starting-setup\\\\17-nextjs-big\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\n\nconst MeetupDetails = ({\n  meetupData\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Moga Village | \", meetupData.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Visualize all details pertaining to this guild quest.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: meetupData.image,\n      title: meetupData.title,\n      address: meetupData.address,\n      description: meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst MONGO_CONNECTION = \"mongodb+srv://ciarlini-nextjs-demo:4j8IedfvzvZ1WHkb@ciarlini-cluster-for-ne.3neug.mongodb.net/meetups?retryWrites=true&w=majority\";\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(MONGO_CONNECTION);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const paths = meetups.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    fallback: false,\n    paths\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    meetupId\n  } = context.params;\n  const client = await MongoClient.connect(MONGO_CONNECTION);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupData = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: meetupData._id.toString(),\n        title: meetupData.title,\n        image: meetupData.image,\n        address: meetupData.address,\n        description: meetupData.description\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["N:/Dev/01-starting-setup/01-starting-setup/17-nextjs-big/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Head","MeetupDetails","meetupData","title","image","address","description","MONGO_CONNECTION","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","findOne","props","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACxC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,sCAAuBA,UAAU,CAACC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,UAAU,CAACE,KADpB;AAEE,MAAA,KAAK,EAAEF,UAAU,CAACC,KAFpB;AAGE,MAAA,OAAO,EAAED,UAAU,CAACG,OAHtB;AAIE,MAAA,WAAW,EAAEH,UAAU,CAACI;AAJ1B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAiBD,CAlBD;;AAoBA,MAAMC,gBAAgB,GACpB,mIADF;AAGA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBH,gBAApB,CAArB;AACA,QAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,QAAMC,KAAK,GAAGL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AACrCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAD6B,GAAb,CAAZ,CAAd;AAIA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELN,IAAAA;AAFK,GAAP;AAID,CAjBM;AAmBP,OAAO,MAAMO,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAM;AAAEJ,IAAAA;AAAF,MAAeI,OAAO,CAACL,MAA7B;AAEA,QAAMb,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBH,gBAApB,CAArB;AACA,QAAMI,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMX,UAAU,GAAG,MAAMU,iBAAiB,CAACgB,OAAlB,CAA0B;AACjDZ,IAAAA,GAAG,EAAElB,QAAQ,CAACyB,QAAD;AADoC,GAA1B,CAAzB;AAIA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACL3B,MAAAA,UAAU,EAAE;AACV4B,QAAAA,EAAE,EAAE5B,UAAU,CAACc,GAAX,CAAeQ,QAAf,EADM;AAEVrB,QAAAA,KAAK,EAAED,UAAU,CAACC,KAFR;AAGVC,QAAAA,KAAK,EAAEF,UAAU,CAACE,KAHR;AAIVC,QAAAA,OAAO,EAAEH,UAAU,CAACG,OAJV;AAKVC,QAAAA,WAAW,EAAEJ,UAAU,CAACI;AALd;AADP;AADF,GAAP;AAWD,CAtBM;AAwBP,eAAeL,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport Head from \"next/head\";\r\n\r\nconst MeetupDetails = ({ meetupData }) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Moga Village | {meetupData.title}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Visualize all details pertaining to this guild quest.\"\r\n        />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={meetupData.image}\r\n        title={meetupData.title}\r\n        address={meetupData.address}\r\n        description={meetupData.description}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst MONGO_CONNECTION =\r\n  \"mongodb+srv://ciarlini-nextjs-demo:4j8IedfvzvZ1WHkb@ciarlini-cluster-for-ne.3neug.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(MONGO_CONNECTION);\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  const paths = meetups.map((meetup) => ({\r\n    params: { meetupId: meetup._id.toString() },\r\n  }));\r\n\r\n  return {\r\n    fallback: false,\r\n    paths,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const { meetupId } = context.params;\r\n\r\n  const client = await MongoClient.connect(MONGO_CONNECTION);\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupData = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupData._id.toString(),\r\n        title: meetupData.title,\r\n        image: meetupData.image,\r\n        address: meetupData.address,\r\n        description: meetupData.description,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}